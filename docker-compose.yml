version: '3.1'
services:
  web:
    build: nginx
    ports:
      - "8080:8080"
    depends_on:
      - application
    links:
      - application
    networks:
      - default
      - frontend
    cap_drop:
      - ALL
    cap_add:
      - CAP_SETPCAP
      - CAP_AUDIT_WRITE
      - CAP_CHOWN
      - CAP_DAC_OVERRIDE
      - CAP_FOWNER
      - CAP_SETUID
      - CAP_SETGID
    security_opt:
      - no-new-privileges
  application:
    build: .
    depends_on:
      - database
      - worker
    links:
      - database
      - worker
    networks:
      - frontend
      - backend
      - sandbox
    secrets:
      - database_password
      - secret_cookie_password
    cap_drop:
      - ALL
    cap_add:
      - CAP_SETPCAP
      - CAP_AUDIT_WRITE
    security_opt:
      - no-new-privileges
  database:
    image: postgres
    environment:
      POSTGRES_USER: cryptomato
      POSTGRES_PASSWORD_FILE: /run/secrets/database_password
      POSTGRES_DB: cryptomato
    secrets:
      - database_password
    networks:
      - backend
    volumes:
      - pgdata:/var/lib/postgresql/data
    cap_drop:
      - ALL
    cap_add:
      - CAP_SETPCAP
      - CAP_AUDIT_WRITE
      - CAP_CHOWN
      - CAP_DAC_OVERRIDE
      - CAP_FOWNER
      - CAP_SETUID
      - CAP_SETGID
    security_opt:
      - no-new-privileges
  worker:
    privileged: true
    build: cryptomato_worker
    networks:
      - sandbox
secrets:
  database_password:
    file: secrets/database_password.txt
  secret_cookie_password:
    file: secrets/secret_cookie_password.txt
volumes:
  pgdata: {}
networks:
  frontend:
    internal: true
  backend:
    internal: true
  sandbox:
    internal: true
